{"name":"TLEprediction","tagline":"Predict seizure onset laterality in temporal lobe epilepsy","body":"   \r\n## Note! The training data will become available once the public release is approved by the Institutional Review Board. Please contact the author for any questions.\r\n   \r\n   \r\n   \r\n   \r\n   \r\n# Prediction of seizure laterality\r\n\r\nThis project provides the tools and necessary data to classify new temporal lobe epilepsy patients based on 3 PET asymmetries. Two steps are required for the prediction: obtain the asymmetries in Matlab (part 1) and use the values to classify the patient in R (part 2).  \r\n\r\nRequirements:\r\n* [Matlab](http://www.mathworks.com/products/matlab/) with [SPM8](http://www.fil.ion.ucl.ac.uk/spm/software/download.html) installed  \r\n* [R](http://www.r-project.org/) or [Rstudio](http://www.rstudio.com/products/rstudio/download/) (recommended)\r\n* Platform independent (Windows,Linux,Mac)  \r\n\r\n## PART 1: obtain 3 PET asymmetries  \r\nDownload [all files](https://github.com/dorianps/TLEprediction/archive/master.zip) and add the folder into the Matlab path. Write the command `CalculatePETasymmetries` (case sensitive). The script will ask you for three files:    \r\n1. PET volume (i.e., PET.nii)  \r\n2. MRI volume (i.e. 001.nii)  \r\n3. Parcellation from Freesurfer (i.e., wmparc.nii)  \r\n*Note: the process relies on SPM8 functions, other SPM versions not tested.*  \r\n\r\nThe script will coregister PET on MRI and reslice the parcellation. It is assumed that the MRI and parcellation volumes are already registered, and that PET and MRI have the same initial orientation.  \r\nThe smoothed masks will be computed and saved in the PET folder. Finally, the three asymmetries are computed and displayed.  \r\nPLEASE DOUBLE CHECK THAT PET HAS BEEN WELL COREGISTERED ONTO MRI !\r\n\r\n\r\n\r\n## PART 2: classify the patient  \r\nThe R script is fully automated and requires only the three asymmetry values obtained in Matlab.  \r\n\r\n**QUICK USAGE:**  \r\n(Windows):  \r\n`source('https://raw.githubusercontent.com/dorianps/TLEprediction/master/TLEpredict.R', echo=F)`  \r\n\r\n(Linux/Mac)  \r\nInstall RCurl the first time: `install.packages(\"RCurl\")`  \r\nThen run command:  \r\n`library(RCurl) ; eval( expr = parse( text = getURL(\"https://raw.githubusercontent.com/dorianps/TLEprediction/master/TLEpredict.R\", ssl.verifypeer=FALSE) ))`  \r\n\r\nEnter the values obtained in Matlab and get the classification statistics.  \r\n\r\n**OFFLINE USAGE:**  \r\nOpen the file [TLEpredict.R](https://github.com/dorianps/TLEprediction/blob/master/TLEpredict.R) in R and follow the instructions.  \r\n\r\n\r\n**PREDICTION EXAMPLE:**  \r\n`source('https://raw.githubusercontent.com/dorianps/TLEprediction/master/TLEpredict.R', echo=F)`  \r\n  Assymetry for PET-mesial: -0.037443  \r\n  Assymetry for PET-hippo-var: 0.050887  \r\n  Assymetry for PET-entire-var: 0.12806  \r\nNumber of bootstraps (i.e., 10000): 10000  \r\nExclude cases from training (0=none, 1=Engel class III/IV, 2=non-operated, 3=1+2): 0  \r\n_Using 58 TLE patients for training (28 left)..._  \r\n>  |=============================================================| 100%  \r\n Patient Classification (10000 bootstraps):  \r\n  [1] \"left TLE: 1.48%\"  \r\n  [1] \"right TLE: 98.52%\"  \r\nAverage Posterior Probability (0=left, 1=right):  \r\n  [1] 0.941  \r\n95% CI of posterior probability (0.5=chance):  \r\n   2.5% 97.5%   \r\n  0.631 1.000   \r\n\r\n  \r\n    \r\n    \r\n**NOTES**  \r\nThe required `brglm` package will be automatically installed if not present in your R libraries.  \r\nThe script will automatically stop if asymmetry values entered are out of [-1 1] range, and will warn if values entered are out of the TLE population range.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}